#!/bin/bash
function run_dialog_command {
    title="4s"
    dialog_command="dialog --title \"$title\" --clear"
    signal_list=(INT QUIT TSTP TERM HUP KILL)
    tmpfile=`tempfile 2>/dev/null` || tmpfile=/tmp/test$$
    trap "rm -f $tmpfile" $signal_list
    if [ -n "$3" ] && [ $3 -eq 0 ]; then
        eval "$dialog_command $1 \"$2\" 20 60 \"$4\" 2>$tmpfile"
    else
        eval "$dialog_command $1 \"$2\" 20 60 $3 $4 2>$tmpfile"
    fi
    retval=$?
    if [ $retval -eq 0 ]; then
        choice=$(cat $tmpfile)
    else
        clear
        if [[  "$1" != "--yesno" ]]; then
            exit 0
        fi
    fi
    return $retval
}
sudo_service_location=$(systemctl show sudo.service -P FragmentPath)
if [ -z "$sudo_service_location" ]; then
    systemd_system_service_dir=$(systemctl show default.target -P FragmentPath | xargs dirname)
else
    systemd_system_service_dir=$(dirname $sudo_service_location)
fi
if ! type "dialog" > /dev/null 2>&1; then
    echo "'dialog' (https://linux.die.net/man/1/dialog) is not installed, please install it and run the script again!"
    exit -1
fi
# printf '%s\n' "${users[@]}"
# Welcome screen
run_dialog_command "--msgbox" "Welcome to the 4s, the simple systemd service setup tool!"
# command
choice=""
while [[ -z "${choice// }" ]]; do
    run_dialog_command "--inputbox" "Enter the command you need to run on boot" 0 ""
    command_input=$(printf '%q ' $choice)
done
# user selection
readarray users -t <<< $(awk -F':' '{ print $1}' /etc/passwd | less)
choices="\"DEFAULT\" \"\" \"on\" "
for i in $(seq 0 $(( ${#users[@]}-1 )) ); do
    choices="$choices\"${users[$i]}\" \"\" \"on\" "
done
run_dialog_command "--radiolist" "Select a user that should run the command (DEFAULT to skip)" ${#users[@]} "$choices"
selected_user=$choice
if [[ "$selected_user" == "DEFAULT" ]]; then
    readarray groups -t <<< $(getent group | cut -d: -f1) 
    selected_user=""
else
    groups=($(groups $selected_user))
    selected_user="User=$selected_user"
fi
# group selection
choices="\"DEFAULT\" \"\" \"on\" "
for i in $(seq 0 $(( ${#groups[@]}-1 )) ); do
    choices="$choices\"${groups[$i]}\" \"\" \"on\" "
done
run_dialog_command "--radiolist" "Select a group that should run the command (DEFAULT to skip)" ${#groups[@]} "$choices"
selected_group=$choice
if [[ "$selected_group" == "DEFAULT" ]]; then
    selected_group=""
else
    selected_group="Group=$selected_group"
fi
# working dir
run_dialog_command "--fselect" /
selected_dir="WorkingDirectory=$choice"
# prepare systemd targets
IFS=$'\n' read -r -d '' -a systemd_targets < <(echo 'SKIP' && systemctl show '*' --state=active --property=Id --value --no-pager | grep -s -E '+.target|+.service' | sort )
choices=""
for i in $(seq 0 $(( ${#systemd_targets[@]}-1 )) ); do
    choices="$choices\"${systemd_targets[$i]}\" \"\" \"on\" "
done
environment_vars=""
while :; do
    run_dialog_command "--yesno" "Do you want to add an environment variable?"
    ret=$?
    if [ $ret -gt 0 ]; then
        break
    else
        run_dialog_command "--inputbox" "Enter the environment variable command you need" 0 ""
    fi
    added_var=$(printf '%q' $choice)
    environment_vars=$environment_vars"\nEnvironment=\"$added_var\""
done
# unit before field
before_field=""
run_dialog_command "--radiolist" "Select a systemd target for [Unit] Before" ${#systemd_targets[@]} "$choices"
selected_before=$choice
if [[ "$selected_before" != "SKIP" ]]; then
    before_field="Before=$selected_before"
fi
# unit after field
after_field=""
run_dialog_command "--radiolist" "Select a systemd target for [Unit] After" ${#systemd_targets[@]} "$choices"
selected_after=$choice
if [[ "$selected_after" != "SKIP" ]]; then
    after_field="After=$selected_after"
fi
# install wanted by field
wanted_by_field=""
run_dialog_command "--radiolist" "Select a systemd target for [Install] WantedBy" ${#systemd_targets[@]} "$choices"
selected_wanted_by=$choice
if [[ "$selected_wanted_by" != "SKIP" ]]; then
    wanted_by_field="WantedBy=$selected_wanted_by"
fi
# install required by field
required_by_field=""
run_dialog_command "--radiolist" "Select a systemd target for [Install] RequiredBy" ${#systemd_targets[@]} "$choices"
selected_required_by=$choice
if [[ "$selected_required_by" != "SKIP" ]]; then
    required_by_field="RequiredBy=$selected_required_by"
fi
# service exec start field
exec_start_field="ExecStart=$(command -v $selected_version) $selected_flags $command_input"
# service restart field
restart_options=("always" "on-success" "on-failure" "on-abnormal" "on-watchdog" "on-abort" "no")
choices=""
for i in $(seq 0 $(( ${#restart_options[@]}-1 )) ); do
    choices="$choices\"${restart_options[$i]}\" \"\" \"on\" "
done
run_dialog_command "--radiolist" "Select a [Restart] strategy" ${#restart_options[@]} "$choices"
selected_restart=$choice
restart_field="Restart=$selected_restart"
systemd_service="\
[Unit]\n\
Description=4s Auto-generated service file for command $command_input.\n\
$before_field\n\
$after_field\n\
\n\
[Service]\n\
Type=simple\n\
$selected_user\n\
$selected_group\n\
$selected_dir\n\
$(echo '$environment_vars')\n\
$exec_start_field\n\
$restart_field\n\
\n\
[Install]\n\
$wanted_by_field\n\
$required_by_field\n\
"
if [ "$#" -eq 0 ]; then
    # Confirmation
    run_dialog_command "--yesno" "Does the service look correct? ('No' will quit):\n$systemd_service" 
    ret=$?
    if [ $ret -gt 0 ]; then
        exit 0
    fi
    # Installation process
    run_dialog_command "--inputbox" "Enter the name of your service file." 0 ""
    service_filename=$choice
    if [[ $service_filename != *.service ]]; then
        service_filename=$service_filename.service
    fi
    run_dialog_command "--msgbox" "The script will now exit and you will be prompted to enter your sudo password in order to install $service_filename in $systemd_system_service_dir... The service will also be enabled."
    clear
fi
printf "$systemd_service"
printf "$systemd_service" | sudo tee $systemd_system_service_dir/$service_filename > /dev/null
sudo systemctl enable $service_filename
